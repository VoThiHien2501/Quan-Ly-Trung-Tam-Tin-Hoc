/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.KhoaHocDAO;
import DAO.NhanVienDAO;
import MODEL.KhoaHoc;
import MODEL.TaiKhoan;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.SpinnerNumberModel;
import com.toedter.calendar.JDateChooser;

/**
 *
 * @author ASUS
 */
public class frmThietKeKhoaHoc extends javax.swing.JFrame {

    private TaiKhoan taiKhoan;
    private DefaultTableModel tblModel;

    /**
     * Creates new form frmQuanLyKhoaHoc
     */
    public frmThietKeKhoaHoc(TaiKhoan taiKhoan) {
        initComponents();
        this.taiKhoan = taiKhoan;
        lblmaNV.setText("Mã NV: " + (taiKhoan != null ? taiKhoan.getMaNV() : "Chưa đăng nhập"));

        initCustomComponents();
    }

    public frmThietKeKhoaHoc() {
        this(null);
    }
//    public frmThietKeKhoaHoc() {
//        initComponents();
//       
//
//        SpinnerNumberModel modelSoLuongLop = new SpinnerNumberModel(1, 1, 100, 1);
//        SpinnerSoluonglop.setModel(modelSoLuongLop);
//
//        SpinnerNumberModel modelSoBuoiHoc = new SpinnerNumberModel(1, 1, 100, 1);
//        SpinnerSobuoihoc.setModel(modelSoBuoiHoc);
//        String[] columnNames = {"Mã KH", "Tên KH", "Ngày bắt đầu", "Ngày kết thúc", "Học phí", "Số lượng lớp", "Số buổi học", "Mã NV"};
//
//        tblModel = new DefaultTableModel(columnNames, 0);
//        tblKhoaHoc.setModel(tblModel);
//        loadTableKhoaHoc();
//        setTitle("Thiết kế khóa học");
//
//        setLocationRelativeTo(null);
//    }

    private void initCustomComponents() {
        SpinnerNumberModel modelSoLuongLop = new SpinnerNumberModel(1, 1, 100, 1);
        SpinnerSoluonglop.setModel(modelSoLuongLop);

        SpinnerNumberModel modelSoBuoiHoc = new SpinnerNumberModel(1, 1, 100, 1);
        SpinnerSobuoihoc.setModel(modelSoBuoiHoc);

        String[] columnNames = {"Mã KH", "Tên KH", "Ngày bắt đầu", "Ngày kết thúc", "Học phí", "Số lượng lớp", "Số buổi học", "Mã NV"};
        tblModel = new DefaultTableModel(columnNames, 0);
        tblKhoaHoc.setModel(tblModel);

        loadTableKhoaHoc();

        setTitle("Thiết kế khóa học");
        setLocationRelativeTo(null);
    }

    public void loadTableKhoaHoc() {
        try {
            // Xóa dữ liệu cũ
            tblModel.setRowCount(0);

            // Giả sử bạn có KhoaHocDao với phương thức getAllKhoaHoc trả về List<KhoaHoc>
            KhoaHocDAO dao = new KhoaHocDAO();
            List<KhoaHoc> list = dao.getAllKhoaHoc();

            for (KhoaHoc kh : list) {
                tblModel.addRow(new Object[]{
                    kh.getMaKH(),
                    kh.getTenKH(),
                    kh.getNgayBatDau(),
                    kh.getNgayKetThuc(),
                    kh.getHocPhi(),
                    kh.getSoLgLop(),
                    kh.getSoBuoiHoc(),
                    kh.getMaNV()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi load dữ liệu: " + e.getMessage());
        }

    }

    private void nhapMoi() {
        txtMaKhoaHoc.setText("");
        txtTenKhoaHoc.setText("");
        txtHocPhi.setText("");

        // Spinner đã cấu hình model từ trước (ví dụ: min = 1)
        SpinnerSoluonglop.setValue(1);
        SpinnerSobuoihoc.setValue(1);
        txtMaKhoaHoc.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaKhoaHoc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenKhoaHoc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DateChooserNgayBatDau = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        DateChooserNgayKetThuc = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtHocPhi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SpinnerSoluonglop = new javax.swing.JSpinner();
        SpinnerSobuoihoc = new javax.swing.JSpinner();
        lblmaNV = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        btnNhapMoi = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Thiết kế khóa học");

        jLabel2.setText("Mã khóa học");

        jLabel3.setText("Tên khóa học");

        jLabel4.setText("Ngày bắt đầu");

        jLabel5.setText("Ngày kết thúc");

        jLabel6.setText("Học phi");

        jLabel7.setText("Số lượng lớp");

        jLabel8.setText("Số buổi học");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SpinnerSobuoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SpinnerSoluonglop, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaKhoaHoc)
                            .addComponent(txtTenKhoaHoc)
                            .addComponent(DateChooserNgayBatDau, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(DateChooserNgayKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHocPhi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(lblmaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtMaKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblmaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DateChooserNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DateChooserNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpinnerSoluonglop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpinnerSobuoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "Ngày bắt đầu", "Ngày kết thúc", "Học phí", "Số lượng lớp", "Số buổi học", "Mã NV"
            }
        ));
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhoaHoc);

        btnNhapMoi.setText("Nhập mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNhapMoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLuu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua)
                .addGap(283, 283, 283)
                .addComponent(btnThoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNhapMoi)
                    .addComponent(btnLuu)
                    .addComponent(btnSua)
                    .addComponent(btnThoat))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        // TODO add your handling code here:
        nhapMoi();
    }//GEN-LAST:event_btnNhapMoiActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        try {
            KhoaHoc kh = new KhoaHoc();
            kh.setMaKH(txtMaKhoaHoc.getText());
            kh.setTenKH(txtTenKhoaHoc.getText());

            BigDecimal hocPhiBD = new BigDecimal(txtHocPhi.getText());
            kh.setHocPhi(hocPhiBD.doubleValue());

            java.util.Date utilDate = DateChooserNgayBatDau.getDate();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            kh.setNgayBatDau(sqlDate);

            java.util.Date util1Date = DateChooserNgayKetThuc.getDate();
            java.sql.Date sql1Date = new java.sql.Date(util1Date.getTime());
            kh.setNgayKetThuc(sql1Date);

            int soBuoi = Integer.parseInt(SpinnerSobuoihoc.getValue().toString());
            int soLuong = Integer.parseInt(SpinnerSoluonglop.getValue().toString());
            kh.setSoBuoiHoc(soBuoi);
            kh.setSoLgLop(soLuong);

            // GÁN MÃ NHÂN VIÊN từ tài khoản đang đăng nhập
            if (taiKhoan != null && taiKhoan.getMaNV() != null) {
                kh.setMaNV(taiKhoan.getMaNV());
            } else {
                JOptionPane.showMessageDialog(this, "Không xác định được mã nhân viên!");
                return;
            }

            // Gọi DAO để thêm
            KhoaHocDAO dao = new KhoaHocDAO();
            boolean them = dao.themKhoaHoc(kh);
            if (them) {
                JOptionPane.showMessageDialog(this, "Thêm khóa học thành công!");
                loadTableKhoaHoc(); // load lại dữ liệu lên bảng
            } else {
                JOptionPane.showMessageDialog(this, "Thêm khóa học thất bại!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        // TODO add your handling code here:
        int row = tblKhoaHoc.getSelectedRow();
        if (row >= 0) {
            try {
                String maKH = tblKhoaHoc.getValueAt(row, 0).toString();
                String tenKH = tblKhoaHoc.getValueAt(row, 1).toString();
                Date ngayBD = (Date) tblKhoaHoc.getValueAt(row, 2);
                Date ngayKT = (Date) tblKhoaHoc.getValueAt(row, 3);

                Object hocPhiObj = tblKhoaHoc.getValueAt(row, 4);
                double hocPhi = 0;
                if (hocPhiObj instanceof BigDecimal) {
                    hocPhi = ((BigDecimal) hocPhiObj).doubleValue();
                } else if (hocPhiObj instanceof Double) {
                    hocPhi = (Double) hocPhiObj;
                } else {
                    hocPhi = Double.parseDouble(hocPhiObj.toString());
                }

                Object soLgLopObj = tblKhoaHoc.getValueAt(row, 5);
                int soLgLop = (soLgLopObj instanceof Integer)
                        ? (Integer) soLgLopObj
                        : Integer.parseInt(soLgLopObj.toString());

                Object soBuoiObj = tblKhoaHoc.getValueAt(row, 6);
                int soBuoi = (soBuoiObj instanceof Integer)
                        ? (Integer) soBuoiObj
                        : Integer.parseInt(soBuoiObj.toString());

                String maNV = tblKhoaHoc.getValueAt(row, 7).toString(); // Có thể không cần dùng

                // Gán dữ liệu lên form
                txtMaKhoaHoc.setText(maKH);
                txtTenKhoaHoc.setText(tenKH);
                DateChooserNgayBatDau.setDate(ngayBD);
                DateChooserNgayKetThuc.setDate(ngayKT);
                txtHocPhi.setText(String.valueOf(hocPhi));
                SpinnerSoluonglop.setValue(soLgLop);
                SpinnerSobuoihoc.setValue(soBuoi);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi hiển thị dữ liệu từ bảng: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            String maKH = txtMaKhoaHoc.getText().trim();
            String tenKH = txtTenKhoaHoc.getText().trim();
            String hocPhiStr = txtHocPhi.getText().trim();

            if (maKH.isEmpty() || tenKH.isEmpty() || hocPhiStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin!");
                return;
            }

            double hocPhi;
            try {
                hocPhi = Double.parseDouble(hocPhiStr);
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Học phí phải là số hợp lệ!");
                return;
            }

            java.util.Date utilStart = DateChooserNgayBatDau.getDate();
            java.util.Date utilEnd = DateChooserNgayKetThuc.getDate();
            if (utilStart == null || utilEnd == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày bắt đầu và kết thúc!");
                return;
            }

            int soLgLop = (SpinnerSoluonglop.getValue() instanceof Integer)
                    ? (Integer) SpinnerSoluonglop.getValue()
                    : Integer.parseInt(SpinnerSoluonglop.getValue().toString());

            int soBuoi = (SpinnerSobuoihoc.getValue() instanceof Integer)
                    ? (Integer) SpinnerSobuoihoc.getValue()
                    : Integer.parseInt(SpinnerSobuoihoc.getValue().toString());

            KhoaHoc kh = new KhoaHoc();
            kh.setMaKH(maKH);
            kh.setTenKH(tenKH);
            kh.setHocPhi(hocPhi);
            kh.setNgayBatDau(new java.sql.Date(utilStart.getTime()));
            kh.setNgayKetThuc(new java.sql.Date(utilEnd.getTime()));
            kh.setSoLgLop(soLgLop);
            kh.setSoBuoiHoc(soBuoi);

            KhoaHocDAO dao = new KhoaHocDAO();
            boolean updated = dao.capNhatKhoaHoc(kh);

            if (updated) {
                JOptionPane.showMessageDialog(this, "Cập nhật khóa học thành công!");
                loadTableKhoaHoc();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại! Mã khóa học có thể không tồn tại.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmThietKeKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmThietKeKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmThietKeKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmThietKeKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmThietKeKhoaHoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooserNgayBatDau;
    private com.toedter.calendar.JDateChooser DateChooserNgayKetThuc;
    private javax.swing.JSpinner SpinnerSobuoihoc;
    private javax.swing.JSpinner SpinnerSoluonglop;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblmaNV;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtMaKhoaHoc;
    private javax.swing.JTextField txtTenKhoaHoc;
    // End of variables declaration//GEN-END:variables
}
